Тест на знание GIT

1)Сколько систем контроля версий существует?
	а)Только GIT.
	б)GIT и CVS.
	в)GIT и CVN.
	г)Все предложенные.

2)Что такое Github?
	a)Видеодрайвер.
	б)UI для работы с локальной версией Git.
	в)Программа для работы с Git.
	г)Веб-сервис для хостинга IT-проектов и их совместной разработки, основанный на Git.

3)Что такое репозиторий Git?
	а)Папка .git/ и все входящие в нее.
	б)Любая папка, находящаяся внутри Git.
	в)Любая директория/папка в моей ОС.
	г)Репозиторий Git представляет собой каталог файловой системы, в котором находятся файлы конфигурации репозитория, файлы журналов, хранящие операции, выполняемые над репозиторием, индекс, описывающий расположение файлов, и хранилище, содержащее собственно файлы.

4)Что такое коммит?
	а)то результат вывода команды git diff.
	б)Это слово ничего не означает, его ввели только для того, чтобы путать новичков.
	в)Это единица состояния проекта в Git.
	г)Это обобщающее название одного из статусов файла в выводе git status: untracked, new, deleted или modified.

5)Как сделать коммит?
	а)Сделать изменения в файлах и перечислить их после git commit. Например так: git commit a.file, b.file.
	б)Всего лишь набрать команду git commit в любой момент времени.
	в)Нельзя сделать коммит, ведь такого понятия не существует.
	г)Сделать изменения, собрать эти изменения командой "git add" или "git commit -a" и указать коммит-сообщение после ключа "-m".

6)Что такое ветка в репозитории Git?
	а)Это то же самое, что и коммит 
	б)Это минимум два коммита с одинаковым коммит-сообщением 
	в)Это разные пути развития проекта, по сути разные последовательности коммитов 
	г)Это механизм изменения конкретного файла.

7)Чем отличается master и origin master?
	а)Это просто два разных названия одной ветки 
	б)master принадлежит локальному репозиторию, а origin master — удаленному 
	в)Это две разные ветки локального репозитория 
	г)Ветки origin master не существует.

8)Что делает команда git log?
	а)Пишет указанный после файл в лог
	б)Такой команды нет, есть только команда git look 
	в)Показывает историю коммитов 
	г)Удаляет файл из репозитория.

9)Как узнать, кто автор строчки в файле, используя систему Git?
	а)Команда git show —author 
	б)Команда git commit —author 
	в)Команда git blame 
	г)Команда git status.

10)Как решить конфликт в Git?
	а)Руками поправить изменения там, где Git не смог это сделать автоматически и затем собрать все в коммит и запушить
	б)Никак придется создавать репозиторий заново 
	в)Выполнить команду git commit merge please
	г)Удалить файл, для которого Git не знает, как смержить изменения.
	
11)Что делает команда git stash?
	а)Отменяет все изменения 
	б)Сохраняет все изменения в буфер 
	В)Удаляет все измененные файлы
	г)Такой команды нет

12)Как применить патч в Git?
	а)Команда git apply path/to/file 
	б)Команда git patch path/to/file 
	в)Команда git add path/to/file
	г)Такого понятия все еще нет
	
13)Сколько всего веток может быть в репозитории?
	а)Сколько угодно
	б)Это число настраивается в конфиге
	в)Не больше двух
	г)Столько же, сколько участников в проекте
	
14)Что такое слияние двух веток?
	а)Когда выполнили команду git fetch
	б)Когда все коммиты, сделанные для одной ветки, становятся видимыми во второй ветке
	в)Когда одну ветку переименовывают в другую
	г)Когда у двух веток скоро появится третья, поменьше, но имеющая признаки обоих родительских веток
	
15)Почему бывают конфликты при слиянии веток?
	а)Это устаревшая проблема, ее нет с версии Git 1.2
	б)Потому что в обеих ветках есть изменения одних и тех же строк
	в)Потому что ветки были созданы в разное время
	г)Потому что ветки были созданы от разных коммитов
